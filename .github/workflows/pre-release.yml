# .github/workflows/pre-release.yml
name: Pre-Release Workflow

on:
  release:
    types: [published]

jobs:
  pre-release-job:
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Create RC branch
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          BRANCH_NAME="${TAG_NAME}-branch"
          git checkout -b $BRANCH_NAME

      - name: Fetch Release Notes
        id: get-notes
        uses: actions/github-script@v7
        with:
          script: |
            const tagName = '${{ github.ref_name }}';
            const repo = context.repo;
            const release = await github.rest.repos.getReleaseByTag({
              ...repo,
              tag: tagName
            });
            return release.data.body;

      - name: Merge production into branch
        run: |
          git fetch --unshallow
          git checkout $BRANCH_NAME
          git merge origin/production -X ours --no-edit

      - name: Prepend release notes to CHANGE_LOG
        run: |
          # Extract the base version number by stripping out -rcX suffix
          BASE_VERSION=$(echo "${{ github.ref_name }}" | sed 's/-rc[0-9]*$//')
          echo "## Version $BASE_VERSION" > temp_CHANGE_LOG.md
          echo ${{ steps.get-notes.outputs.result }} >> temp_CHANGE_LOG.md
          echo "" >> temp_CHANGE_LOG.md
          cat CHANGE_LOG.md >> temp_CHANGE_LOG.md
          mv temp_CHANGE_LOG.md CHANGE_LOG.md
          git add CHANGE_LOG.md
          git commit -m "build(release $BASE_VERSION): see CHANGE_LOG.md for release notes"

      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global push.default current
          git push --set-upstream origin $BRANCH_NAME

      - name: Create pull request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BASE_VERSION=$(echo "${{ github.ref_name }}" | sed 's/-rc[0-9]*$//')
          gh auth setup-git
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
          gh pr create \
            --title "build(release $BASE_VERSION): release candidate ${{ github.ref_name }}" \
            --body "This is a release candidate [${{ github.ref_name }}]($RELEASE_URL). Please review the changes and test the deployment. If everything looks good, merge this PR to production." \
            --base production \
            --head "$BRANCH_NAME" \
            --repo ${{ github.repository }}
