{
  "name": "@oakai/db",
  "version": "0.1.0",
  "license": "MIT",
  "main": "./index.ts",
  "types": "./index.ts",
  "scripts": {
    "clean": "rm -rf .turbo node_modules",
    "db-dump:prd": "docker exec oak-ai-beta pg_dump $(doppler secrets get -c prd --plain DATABASE_ADMIN_URL | sed -e 's/?sslmode=required//g') --no-owner --exclude-table-data public.generations --exclude-table-data public.snippets --exclude-table-data public.downloads",
    "db-dump:stg": "docker exec oak-ai-beta pg_dump $(doppler secrets get -c stg --plain DATABASE_ADMIN_URL | sed -e 's/?sslmode=required//g') --no-owner --exclude-table-data public.generations --exclude-table-data public.snippets --exclude-table-data public.downloads",
    "db-dump:stg:homebrew": "pg_dump $(doppler secrets get -c stg --plain DATABASE_ADMIN_URL | sed -e 's/?sslmode=required/?sslcert=./certs/db_stg.pem/g') --no-owner --exclude-table-data public.generations --exclude-table-data public.snippets --exclude-table-data public.downloads",
    "db-export": "DB_ENV=dev doppler run --config dev -- bash scripts/import-export/db_export.sh",
    "db-export:prd": "DB_ENV=prd doppler run --config prd -- bash scripts/import-export/db_export.sh",
    "db-export:stg": "DB_ENV=stg doppler run --config stg -- bash scripts/import-export/db_export.sh",
    "db-generate": "pnpm with-env prisma generate",
    "db-generate:no-engine": "pnpm with-env prisma generate --no-engine",
    "db-generate:dev": "pnpm with-env prisma generate",
    "db-migrate-deploy": "pnpm with-env prisma migrate deploy",
    "db-migrate": "pnpm with-env prisma migrate dev",
    "db-migrate:dev": "pnpm with-env prisma migrate dev",
    "db-migrate:status": "pnpm with-env prisma migrate status",
    "db-migrate:status:stg": "DB_ENV=stg doppler run --config stg prisma migrate status",
    "db-migrate:status:prd": "DB_ENV=prd doppler run --config prd prisma migrate status",
    "db-migrate-resolve-applied:prd": "doppler run --config prd -- prisma migrate resolve --applied",
    "db-migrate-resolve-applied:stg": "doppler run --config stg -- prisma migrate resolve --applied",
    "db-migrate-resolve-rolled-back:prd": "doppler run --config prd -- prisma migrate resolve --rolled-back",
    "db-migrate-resolve-rolled-back:stg": "doppler run --config stg -- prisma migrate resolve --rolled-back",
    "db-migrate:prd": "DB_ENV=prd doppler run --config prd -- bash scripts/import-export/db_migrate.sh",
    "db-migrate:stg": "DB_ENV=stg doppler run --config stg -- bash scripts/import-export/db_migrate.sh",
    "db-new-migration-blank": "pnpm with-env prisma migrate dev --create-only",
    "db-new-migration": "pnpm with-env prisma migrate dev --name",
    "db-new-migration-create-only": "pnpm with-env prisma migrate dev --create-only --name",
    "db-publish:prd": "DB_ENV=prd doppler run --config prd -- bash scripts/import-export/db_publish.sh",
    "db-publish:stg": "DB_ENV=stg doppler run --config stg -- bash scripts/import-export/db_publish.sh",
    "db-push": "pnpm with-env prisma db push",
    "db-push-force": "pnpm with-env prisma db push -- --accept-data-loss",
    "db-restore-from:prd": "pnpm run --silent db-dump:prd | docker exec -i oak-ai-beta psql -U oai",
    "db-restore-from:stg": "pnpm run --silent db-dump:stg | docker exec -i oak-ai-beta psql -U oai",
    "db-restore-from:stg:homebrew": "pnpm run --silent db-dump:stg:homebrew | psql -U oai",
    "db-seed": "pnpm prisma db seed",
    "db-validate-schema": "pnpm with-env prisma validate",
    "dev": "pnpm with-env prisma studio --port 5556",
    "docker-bootstrap": "pnpm run docker-build && pnpm run docker-clear && pnpm run docker-run",
    "docker-build": "docker build -t oai-pg ./",
    "docker-clear": "docker ps -a | grep -q oak-ai-beta && docker stop oak-ai-beta && docker rm oak-ai-beta || echo \"Container oak-ai-beta does not exist.\"",
    "docker-psql": " docker exec -it oak-ai-beta psql -U oai",
    "docker-reset": "pnpm run docker-clear && pnpm run docker-run",
    "docker-run": "docker run --name oak-ai-beta -p 5432:5432 -d oai-pg",
    "schema-format": "pnpm with-env prisma format",
    "script-add-metadata-to-lesson-summaries": "ts-node --compiler-options {\\\"module\\\":\\\"CommonJS\\\"} ./scripts/processing/add_metadata_to_lesson_summaries.ts",
    "script-batch-process-clean-questions": "ts-node --compiler-options {\\\"module\\\":\\\"CommonJS\\\"} ./scripts/processing/batch_process_clean_questions.ts",
    "script-batch-update-clerk-users": "ts-node --compiler-options {\\\"module\\\":\\\"CommonJS\\\"} ./scripts/processing/update_clerk_users.ts",
    "with-env": "dotenv -e ../../.env --"
  },
  "prettier": "@oakai/prettier-config",
  "dependencies": {
    "@prisma/client": "^5.13.0",
    "@types/chunk-text": "^1.0.0",
    "cheerio": "1.0.0-rc.12",
    "chunk-text": "^2.0.1",
    "graphql-request": "^6.1.0",
    "openai": "^4.58.1",
    "p-queue": "^7.4.1",
    "p-queue-compat": "^1.0.225",
    "ts-node": "^10.9.2",
    "yaml": "^2.4.1"
  },
  "devDependencies": {
    "@oakai/prettier-config": "*",
    "dotenv-cli": "^6.0.0",
    "prisma": "^5.13.0",
    "typescript": "5.3.3",
    "zod-prisma": "^0.5.4"
  },
  "engines": {
    "node": ">=20.9.0",
    "pnpm": ">=8"
  },
  "prisma": {
    "seed": "ts-node --compiler-options {\"module\":\"CommonJS\"} prisma/seed.ts"
  }
}
