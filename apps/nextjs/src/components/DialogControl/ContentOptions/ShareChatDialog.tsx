import { useCallback } from "react";

import { LooseLessonPlan } from "@oakai/aila/src/protocol/schema";
import { Flex } from "@radix-ui/themes";
import * as Sentry from "@sentry/react";

import { DialogTypes } from "@/components/AppComponents/Chat/Chat/types";
import ChatButton from "@/components/AppComponents/Chat/ui/chat-button";
import LoadingWheel from "@/components/LoadingWheel";
import { getLessonTrackingProps } from "@/lib/analytics/helpers";
import useAnalytics from "@/lib/analytics/useAnalytics";
import { trpc } from "@/utils/trpc";

type ShareChatProps = {
  chatId: string;
  setOpenExportDialog: (open: DialogTypes) => void;
  lesson: LooseLessonPlan;
  isShared: boolean | undefined;
};

const ShareChat = ({
  chatId,
  setOpenExportDialog,
  lesson,
  isShared,
}: Readonly<ShareChatProps>) => {
  const closeDialog = useCallback(() => {
    setOpenExportDialog("");
  }, [setOpenExportDialog]);

  const { track } = useAnalytics();
  const { mutateAsync, isSuccess, isLoading, isError } =
    trpc.chat.appSessions.shareChat.useMutation();

  const attemptToShareChat = async () => {
    track.lessonPlanShared({
      ...getLessonTrackingProps({ lesson }),
      componentType: "go_to_share_page_button",
    });

    try {
      await mutateAsync({ id: chatId });
    } catch (error) {
      Sentry.captureException(error, { extra: { chatId } });
    }
  };

  function handleShareButtonState() {
    if (isLoading) {
      return <LoadingWheel />;
    } else if (isSuccess || isShared) {
      return (
        <ChatButton
          variant="primary"
          href={`/aila/${chatId}/share`}
          disabled={isLoading}
          target="_blank"
        >
          Go to share page
        </ChatButton>
      );
    }
    return (
      <ChatButton
        variant="primary"
        onClick={attemptToShareChat}
        disabled={isLoading}
      >
        Create shareable link
      </ChatButton>
    );
  }

  return (
    <Flex className="h-full w-full" direction="column" justify="between">
      <div>
        <p className="mb-12 text-2xl">Share Chat</p>
        <p className="mb-18">
          Please be aware that while our AI lesson planning tool aims to assist
          educators by generating educational content, it should be used as a
          supplementary resource. The content generated by the tool should
          always be reviewed and adapted to ensure accuracy, relevance, and
          alignment with specific educational standards and objectives.
        </p>
      </div>
      <div className="flex w-full justify-end gap-7">
        <ChatButton variant="secondary" onClick={() => closeDialog()}>
          Cancel
        </ChatButton>
        {handleShareButtonState()}
      </div>
      {isError && <p>There was an error sharing the chat.</p>}
    </Flex>
  );
};

export default ShareChat;
